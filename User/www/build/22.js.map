{"version":3,"sources":["../../src/pages/chat/chat.module.ts","../../src/pages/chat/chat.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACd;AAUlC,IAAa,cAAc;IAA3B;IAA6B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAjB,cAAc;IAR1B,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,uDAAQ;SACT;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;SACnC;KACF,CAAC;GACW,cAAc,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACZe;AAC2D;AAChC;AACT;AACM;AAClE;;;;;GAKG;AAOH,IAAa,QAAQ;IAGnB,kBAAmB,OAAsB,EAAS,QAAwB,EAAS,KAAsB,EAAS,aAA4B,EAAS,EAAmB,EAAS,EAAoB,EAAS,SAAoB;QAAjN,YAAO,GAAP,OAAO,CAAe;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAAS,UAAK,GAAL,KAAK,CAAiB;QAAS,kBAAa,GAAb,aAAa,CAAe;QAAS,OAAE,GAAF,EAAE,CAAiB;QAAS,OAAE,GAAF,EAAE,CAAkB;QAAS,cAAS,GAAT,SAAS,CAAW;QACjO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;IACrC,CAAC;IAED,kCAAe,GAAf;QAAA,iBAeC;QAdC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,kBAAQ;YACzE,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,QAAQ,CAAC,OAAO,CAAE,cAAI;gBACpB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;oBAClB,EAAE,EAAE,IAAI,CAAC,GAAG;oBACZ,MAAM,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,cAAc;oBACjC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,cAAc;iBAChC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC;gBAC3B,MAAM,CAAC,KAAK;YACd,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,4BAAS,GAAT;QACE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC1B,CAAC;IAID,uBAAI,GAAJ;QAAA,iBAyBC;QAxBC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAC5B,KAAK,EAAE,SAAS;YAChB,MAAM,EAAE;gBACN;oBACE,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,OAAO;iBACrB;aACF;YACD,OAAO,EAAE;gBACP;oBACE,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,QAAQ;oBACd,OAAO,EAAE,cAAI;oBACb,CAAC;iBACF;gBACD;oBACE,IAAI,EAAE,MAAM;oBACZ,OAAO,EAAE,cAAI;wBACX,KAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,KAAI,CAAC,EAAE,CAAC;oBAC5C,CAAC;iBACF;aACF;SACF,CAAC,CAAC;QACH,KAAK,CAAC,OAAO,EAAE,CAAC;IAClB,CAAC;IAEH,eAAC;AAAD,CAAC;AA1DY,QAAQ;IALpB,wEAAS,EAAE;IACX,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;OACG;KACzB,CAAC;aAIoO;AAuDrO;SA1DY,QAAQ,e","file":"22.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChatPage } from './chat';\n\n@NgModule({\n  declarations: [\n    ChatPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChatPage),\n  ],\n})\nexport class ChatPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, ViewController, AlertController, NavParams } from 'ionic-angular';\nimport { LanguageProvider } from '../../providers/language/language';\nimport { EventProvider } from '../../providers/event/event';\nimport { ProfileProvider } from '../../providers/profile/profile';\n/**\n * Generated class for the ChatPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-chat',\n  templateUrl: 'chat.html',\n})\nexport class ChatPage {\n  id: any;\n  public eventList: Array<any>;\n  constructor(public navCtrl: NavController, public viewCtrl: ViewController, public alert: AlertController, public eventProvider: EventProvider, public ph: ProfileProvider, public lp: LanguageProvider, public navParams: NavParams) {\n     this.id = this.navParams.get('id')\n  }\n\n  ionViewDidEnter() {\n    console.log('inregf')\n    this.eventProvider.getChatList(this.id).orderByValue().on('value', snapshot => {\n      this.eventList = [];\n      console.log('sjiy')\n      snapshot.forEach( snap => {\n        this.eventList.push({\n          id: snap.key,\n          driver: snap.val().Driver_Message,\n          user: snap.val().Client_Message,\n        });\n        console.log(this.eventList)\n        return false\n      });\n    });\n  }\n\n\n  closeChat(){\n    this.viewCtrl.dismiss();\n  }\n\n  \n\n  Send() {\n    let alert = this.alert.create({\n      title: 'message',\n      inputs: [\n        {\n          name: 'Message',\n          placeholder: 'Reply'\n        },\n      ],\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: data => {    \n          }\n        },\n        {\n          text: 'Send',\n          handler: data => {\n            this.ph.SendMessage(data.Message, this.id)\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/chat/chat.ts"],"sourceRoot":""}